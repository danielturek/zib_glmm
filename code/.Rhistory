getwd()
ls()
names(jagsGLMMdata)
Y
jagsGLMMdata$Y
jagsGLMMdata$detectionMatrix
class(jagsGLMMdata$detectionMatrix)
dim(jagsGLMMdata$detectionMatrix)
dimnames(jagsGLMMdata$detectionMatrix)
dimnames(jagsGLMMdata$detectionMatrix)[[1]]
dimnames(jagsGLMMdata$detectionMatrix)[[2]]
dim(jagsGLMMdata$detectionMatrix)
str(jagsGLMMdata$detectionMatrix)
unique(jagsGLMMdata$detectionMatrix)
as.numeric((jagsGLMMdata$detectionMatrix)
as.numeric((jagsGLMMdata$detectionMatrix)
as.numeric(jagsGLMMdata$detectionMatrix)
length(as.numeric(jagsGLMMdata$detectionMatrix))
(as.numeric(jagsGLMMdata$detectionMatrix))
remove.na
remove.nas
as.numeric(jagsGLMMdata$detectionMatrix)
a <-as.numeric(jagsGLMMdata$detectionMatrix)
a
!is.na(a)
a[!is.na(a)]
aa <- a[!is.na(a)]
aa
unique(aa)
length(aa)
length(a)
glmmOutput
glmmOutput
names(jagsGLMMdata)
jagsGLMMdata$list_length
str(jagsGLMMdata$list_length)
class(jagsGLMMdata$list_length)
im(jagsGLMMdata$list_length)
dim(jagsGLMMdata$list_length)
dimnames(jagsGLMMdata$list_length)
jagsGLMMdata$list_length
unique(jagsGLMMdata$list_length)
as.numeric(jagsGLMMdata$list_length)
unique(jagsGLMMdata$list_length)
unique(as.numeric(jagsGLMMdata$list_length))
mean(jagsGLMMdata$list_length)
diag(2)
chol(diag(2))
qqq
jagsGLMMdata
strjagsGLMMdata
str(jagsGLMMdata)
class(jagsGLMMdata)
qqq
ls()
?rm
ls()
?save
dir
?require
?cat
?depare
?deparse
code
dir
qqq
qqq
ls()
ls()
aet
dim(aet)
ls()
qqq
q('no')
ls()
dim(y)
qqq
month
unique(month)
unique(as.numeric(month))
unique(as.numeric(month^2))
ls()
year-year^2
year-year^2 == 0
year-year^2 == 0
month^2 - month2
year2-year^2 == 0
all(year2-year^2 == 0)
nlist
nsite
dim(y)
dim(year)
dim(month)
dim(cwd)
nsite
y
as.numeric(y)
!is.na(as.numeric(y))
sum(!is.na(as.numeric(y)))
dim(y)
prod(dim(y))
qqq
qqq
qqq
ls()
ls()
y
dim(y)
prod(dim(y))
is.na(y)
!is.na(y)
sum(!is.na(y))
which(!is.na(y))
ind <-which(!is.na(y))
y[ind]
ind
length(ind)
aet
aet[ind]
aet[ind+1]
aet[ind]
year[ind]
year[ind+2]
ind
list_length[ind]
qqq
dim(y)
nsite
siteMatrix
siteMatrix[1:10,1:10]
siteIDflat
y[,251]
!is.na(y[,251])
sum(!is.na(y[,251]))
sum(!is.na(y[,250]))
sum(!is.na(y[,249]))
sum(!is.na(y[,248]))
sum(!is.na(y[,247]))
sum(!is.na(y[,246]))
siteIDflat
sum(!is.na(y[,245]))
sum(!is.na(y[,244]))
sum(!is.na(y[,1]))
sum(!is.na(y[,2]))
sum(!is.na(y[,3]))
qqq
qqq
ls()
qqq
N
nsite
siteID
siteIDflat
qqq
constants
names(constants)
constants$nsite
data$nsite
nsite
qqq
dim(out$samples)
compareMCMCs
args(compareMCMCs)
class(comp)
names(comp)
class(comp$model1)
names(comp$model1)
comp$model1$summary
comp$model1$timing
comp$model1$efficiency
getwd
getwd()
make_MCMC_comparison_pages(comp)
qqq
qqq
comparison$timing
comparison$timing
comparison
is.data.frame(comparison)
comparison$timing
oldname
newname
methodNames
methodNames
Q
comparison$timing
methodNames
Q
methodNames
methodNames
comparison$timing
comparison$timing
methodNames
methodNames
comparison$efficiency
comparison$efficiency
comparison$efficiency
comparison$summary
dimnames(comparison$summary)
rownames(comparison$summary)
dim(comparison$summary)
dim(comparison$samples)
dimnames(comparison$samples)
rownames(comparison$samples)
dimnames(comparison$summary)
dimnames(comparison$summary)
dimnames(comparison$samples)
rownames(comparison$samples) <- methodNames
dimnames(comparison$samples)
comparison$nothing
comparison
names(comparison)
comparison$nothing
rownames(comparison$nothing)
rownames(comparison$nothing) <- methodNames
if(!is.null(comparison$samples)) rownames(comparison$samples) <- methodNames
if(!is.null(comparison$samples)) rownames(comparison$samples) <- methodNames
dimnames(comparison$samples)
if(!is.null(comparison$samddddples)) rownames(comparison$samples) <- methodNames
qqq
names(dotargs)
names(dotArgs)
names(dotsArgs)
class(dotsArgs)
length(dotsArgs)
dotsArgs[[1]]$summary
dotsArgs[[2]]$summary
dimnames(dotsArgs[[2]]$summary)
dimnames(dotsArgs[[1]]$summary)
summary
dimnames(summary)
timings
timings
timings
timing
dotsArgs[[1]]$efficency
dotsArgs[[1]]$efficiency
dotsArgs[[2]]$efficiency
efficiencies
efficiencies
lapply(efficiencies, `[[`, 'min')
unlist(lapply(efficiencies, `[[`, 'min'))
efficiency
dotsArgs[[1]]$samples
lapply(dotsArgs, `[[`, 'samples')
lapply(dotsArgs, `[[`, 'samplesdd')
lapply(lapply(dotsArgs, `[[`, 'samples'), function(x) !is.null(x))
sapply(lapply(dotsArgs, `[[`, 'samples'), function(x) !is.null(x))
sapply(lapply(dotsArgs, `[[`, 'sampledds'), function(x) !is.null(x))
sapply(lapply(dotsArgs, `[[`, 'samples'), function(x) !is.null(x))
all(sapply(lapply(dotsArgs, `[[`, 'samples'), function(x) !is.null(x)))
allSamples <- lapply(dotsArgs, `[[`, 'samples')
class(allSamples)
names(class(allSamples))
dim(allSamples[[1]])
dimnames(allSamples[[1]])
samples <- do.call(abind1, allSamples)
dimnames(samples)
names(dotsArgs[[1]])
Q
qqq
qqq
qqq
qqq
t
t
t
options(digits = 8)
qqq
Q
qqq
qqq
905-263+1
N
905-263
qqq
qqq
quote(if(a)
b
else
c
)
quote(if(a) {
b }
else
c
)
y
data
data$y
unique(data$y)
names(comp)
comp$zib$timing
qqq
qqq
qqq
qqq
qqq
qqq
qqq
qqq
qqq
1/
0
1/0
a(bb)
try(a(bb))
try(a(bb), silent=TRUE)
a <- try(a(bb))
a
try(e <- a(bb))
?try
qqq
it
distMatrix
length(distMatrix)
class(distMatrix[[it]])
hclust(distMatrix[[it]])
class(distMatrix[[it]])
str(distMatrix[[it]])
as.array(distMatrix[[it]])
dim(as.array(distMatrix[[it]]))
class(empCor[[it]])
as.numeric((empCor[[it]]))
class(empCov[[it]])
dim(empCov[[it]])
as.numeric(empCov[[it]])
as.numeric(empCov[[it]]) == 0
all(as.numeric(empCov[[it]]) == 0)
which(as.numeric(empCov[[it]]) != 0)
as.numeric(empCov[[it]])[which(as.numeric(empCov[[it]]) != 0)]
class(burnedSamples)
dim(burnedSamples)
burnedSamples[1:10,1:10]
grouping
samplers
Q
qqq
qqq
Q
qqq
class(comp$zib)
class(comp$zib)
class(comp2$zib)
names(comp2$zib)
dimnames(samples(comp2$zib))
dimnames(comp2$zib$samples)
dimnames(comp2$zib$samples)
qqq
quote(if(a) b
else vd)
qqq
qqq
qqq
code
Q
qqq
qqq
ls()
ls()
ls()
ls()
ls()
qqq
qqq
qqq
names(comp_dOcc)
qqq
qqq
comp_dOcc <- compareMCMCs(modelInfo_dOccupancy,
                          MCMCs = c('nimble', 'block', 'log', 'log_shft', 'log_shft_blk'),
                          niter = niter,
                          summary = FALSE,
                          MCMCdefs = list(
                              block = quote({
                                  spec <- configureMCMC(Rmodel)
                                  spec$removeSamplers('beta[1:10]')
                                  spec$addSampler('beta[1:2]', 'RW_block')
                                  spec$addSampler('beta[3:10]', 'RW_block')
                                  spec$printSamplers()  ## XXXXXXXXXXXXXXXXXX
                                  spec }),
                              log = quote({
                                  spec <- configureMCMC(Rmodel)
                                  spec$removeSamplers('sigma_alpha')
                                  spec$addSampler('sigma_alpha', 'RW', list(log=TRUE))
                                  spec }),
                              log_shft = quote({
                                  spec <- configureMCMC(Rmodel)
                                  spec$removeSamplers('sigma_alpha')
                                  spec$addSampler('sigma_alpha', 'RW_log_shift', list(shiftNodes='alpha'))
                                  spec }),
                              log_shft_blk = quote({
                                  spec <- configureMCMC(Rmodel)
                                  spec$removeSamplers('beta[1:10]')
                                  spec$addSampler('beta[1:2]', 'RW_block')
                                  spec$addSampler('beta[3:10]', 'RW_block')
                                  spec$removeSamplers('sigma_alpha')
                                  spec$addSampler('sigma_alpha', 'RW_log_shift', list(shiftNodes='alpha'))
                                  spec })
                              ))
qqq
ls
controlName
controlValue
controlValue
controlValue
length(controlValue)
controlValue == 0
Q
qqq
getNimbleOptions
getNimbleOption
getNimbleOption(MCMCcontrolDefaultList)
getNimbleOption('MCMCcontrolDefaultList')
qqq
qqq
qqq
qqq
qqq
subset
?subset
objects
?objects
objects()
ls()
qqq
qqq
